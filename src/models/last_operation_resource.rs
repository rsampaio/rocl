/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * The version of the OpenAPI document: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct LastOperationResource {
    #[serde(rename = "state")]
    pub state: State,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "instance_usable", skip_serializing_if = "Option::is_none")]
    pub instance_usable: Option<bool>,
    #[serde(rename = "update_repeatable", skip_serializing_if = "Option::is_none")]
    pub update_repeatable: Option<bool>,
}

impl LastOperationResource {
    pub fn new(state: State) -> LastOperationResource {
        LastOperationResource {
            state: state,
            description: None,
            instance_usable: None,
            update_repeatable: None,
        }
    }
}

///
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "in progress")]
    InProgress,
    #[serde(rename = "succeeded")]
    Succeeded,
    #[serde(rename = "failed")]
    Failed,
}
