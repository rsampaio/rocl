/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * The version of the OpenAPI document: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceBindingResource {
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::ServiceBindingMetadata>>,
    #[serde(rename = "credentials", skip_serializing_if = "Option::is_none")]
    pub credentials: Option<serde_json::Value>,
    #[serde(rename = "syslog_drain_url", skip_serializing_if = "Option::is_none")]
    pub syslog_drain_url: Option<String>,
    #[serde(rename = "route_service_url", skip_serializing_if = "Option::is_none")]
    pub route_service_url: Option<String>,
    #[serde(rename = "volume_mounts", skip_serializing_if = "Option::is_none")]
    pub volume_mounts: Option<Vec<crate::models::ServiceBindingVolumeMount>>,
    #[serde(rename = "endpoints", skip_serializing_if = "Option::is_none")]
    pub endpoints: Option<Vec<crate::models::ServiceBindingEndpoint>>,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<serde_json::Value>,
}

impl ServiceBindingResource {
    pub fn new() -> ServiceBindingResource {
        ServiceBindingResource {
            metadata: None,
            credentials: None,
            syslog_drain_url: None,
            route_service_url: None,
            volume_mounts: None,
            endpoints: None,
            parameters: None,
        }
    }
}


