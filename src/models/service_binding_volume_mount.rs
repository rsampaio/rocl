/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * The version of the OpenAPI document: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceBindingVolumeMount {
    #[serde(rename = "driver")]
    pub driver: String,
    #[serde(rename = "container_dir")]
    pub container_dir: String,
    #[serde(rename = "mode")]
    pub mode: Mode,
    #[serde(rename = "device_type")]
    pub device_type: DeviceType,
    #[serde(rename = "device")]
    pub device: crate::models::ServiceBindingVolumeMountDevice,
}

impl ServiceBindingVolumeMount {
    pub fn new(driver: String, container_dir: String, mode: Mode, device_type: DeviceType, device: crate::models::ServiceBindingVolumeMountDevice) -> ServiceBindingVolumeMount {
        ServiceBindingVolumeMount {
            driver: driver,
            container_dir: container_dir,
            mode: mode,
            device_type: device_type,
            device: device,
        }
    }
}

/// 
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum Mode {
    #[serde(rename = "r")]
    R,
    #[serde(rename = "rw")]
    Rw,
}
/// 
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum DeviceType {
    #[serde(rename = "shared")]
    Shared,
}

