/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * The version of the OpenAPI document: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceInstanceProvisionRequestBody {
    #[serde(rename = "service_id")]
    pub service_id: String,
    #[serde(rename = "plan_id")]
    pub plan_id: String,
    /// See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<serde_json::Value>,
    #[serde(rename = "organization_guid")]
    pub organization_guid: String,
    #[serde(rename = "space_guid")]
    pub space_guid: String,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<serde_json::Value>,
}

impl ServiceInstanceProvisionRequestBody {
    pub fn new(service_id: String, plan_id: String, organization_guid: String, space_guid: String) -> ServiceInstanceProvisionRequestBody {
        ServiceInstanceProvisionRequestBody {
            service_id,
            plan_id,
            context: None,
            organization_guid,
            space_guid,
            parameters: None,
        }
    }
}


